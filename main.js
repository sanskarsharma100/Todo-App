(()=>{"use strict";var __webpack_modules__={974:()=>{eval("\n;// CONCATENATED MODULE: ./src/creatingTask.js\n\r\n\r\nfunction creatingTask() {\r\n    const addTaskBtn = document.querySelector(\".add-task-wrapper\");\r\n    addTaskBtn.addEventListener(\"click\", showAddTaskForm);\r\n\r\n    const addTaskForm = document.querySelector(\"#addTaskForm\");\r\n    addTaskForm.addEventListener(\"submit\", processCreatingTask);\r\n\r\n    const formCancelBtn = document.querySelector(\".task-cancel-btn\");\r\n    formCancelBtn.addEventListener(\"click\", hideAddTaskForm);\r\n}\r\n\r\nlet id = Number(localStorage.getItem(\"taskListId\")) || 0;\r\n\r\nfunction createTask(\r\n    dataProject,\r\n    taskId,\r\n    taskName,\r\n    description,\r\n    date,\r\n    favorite,\r\n    completed\r\n) {\r\n    return {\r\n        dataProject,\r\n        taskId,\r\n        taskName,\r\n        description,\r\n        date,\r\n        favorite,\r\n        completed,\r\n    };\r\n}\r\n\r\nfunction processCreatingTask(e) {\r\n    e.preventDefault();\r\n    const taskName = document.querySelector(\"#taskName\").value;\r\n    const description = document.querySelector(\"#desc\").value;\r\n    let date = document.querySelector(\"#date\").value;\r\n    date = processDate(date);\r\n    let dataProject = getDataProject();\r\n    const taskListId = id;\r\n\r\n    const newTask = createTask(\r\n        dataProject,\r\n        taskListId,\r\n        taskName,\r\n        description,\r\n        date,\r\n        false,\r\n        false\r\n    );\r\n    projectList[dataProject].taskList.push(newTask);\r\n    id++;\r\n    storeInLocalStorage();\r\n    addTasktoUI(taskName, description, date, taskListId);\r\n    hideAddTaskForm();\r\n}\r\n\r\nfunction displayTask(dataProject) {\r\n    const taskList = document.querySelector('#Tasks');\r\n    taskList.innerHTML = '';\r\n\r\n    projectList[dataProject].taskList.forEach(task=> {\r\n        addTasktoUI(task.taskName, task.description, task.date, task.taskId,task.favorite,task.completed);\r\n    })\r\n}\r\n\r\nfunction addTasktoUI(taskName, description, date, taskListId, favorite, completed) {\r\n    const taskContainer = newElement('div', `${taskListId}`, 'taskInfo');\r\n    const taskTitle = newElement('div','taskTitle');\r\n\r\n    const checkBoxlabel = newElement('label', '', 'completeLabel');\r\n    checkBoxlabel.htmlFor = `checkComplete${taskListId}`;\r\n\r\n    const checkBox = newElement('input', `checkComplete${taskListId}`);\r\n    checkBox.type = 'checkbox';\r\n    checkBoxlabel.appendChild(checkBox);\r\n\r\n    // checkBoxlabel.innerHTML = `<input id=\"checkComplete${taskListId}\" type=\"checkbox\" />`;\r\n    const taskNameContainer = newElement('p', '', 'taskName');\r\n    taskNameContainer.textContent = taskName;\r\n\r\n    const taskBtns = newElement('div', '', 'task-buttons');\r\n\r\n    const dateContainer = newElement('span', '', 'task-date');\r\n    dateContainer.innerText = date;\r\n\r\n    const favBtn = newElement('i', '', 'fa-regular fa-star fav-btn');\r\n    const deleteBtn = newElement('i', '', 'fa-solid fa-trash-can delete-task-btn')\r\n    const renameBtn = newElement('i', '', 'fa-regular fa-pen-to-square rename-task-btn');\r\n\r\n    const descContainer = newElement('div', 'description');\r\n    const desc = newElement('p',);\r\n    desc.textContent = description;\r\n    descContainer.appendChild(desc);\r\n    \r\n    if(completed) {\r\n        checkBox.checked = true;\r\n        taskContainer.classList.add('strike-through', 'dim');\r\n    }\r\n    if(favorite) {\r\n        favBtn.classList.remove('fa-regular');\r\n        favBtn.classList.add('fa-solid');\r\n    }\r\n\r\n    taskBtns.appendChild(dateContainer);\r\n    taskBtns.appendChild(favBtn);\r\n    taskBtns.appendChild(deleteBtn);\r\n    taskBtns.appendChild(renameBtn);\r\n\r\n    taskTitle.appendChild(checkBoxlabel);\r\n    taskTitle.appendChild(taskNameContainer);\r\n    taskTitle.appendChild(taskBtns);\r\n    taskContainer.appendChild(taskTitle);\r\n    taskContainer.appendChild(descContainer);\r\n\r\n    const arrowBtn = newElement('div', '', 'arrow-btn');\r\n    arrowBtn.innerHTML = '<div class=\"arrow-down\"></div>';\r\n\r\n    taskContainer.appendChild(arrowBtn);\r\n\r\n    document.querySelector(\"#Tasks\").append(taskContainer);\r\n}\r\n\r\nfunction newElement(tagName, id, className) {\r\n    const element = document.createElement(tagName);\r\n    if(id) element.id = id;\r\n    if(className) {\r\n        className = className.split(' ');\r\n        className.forEach(name => {\r\n            element.classList.add(name);\r\n        })\r\n    \r\n    }\r\n    return element;\r\n}\r\n\r\nfunction processDate(date) {\r\n    if (!date) {\r\n        return (date = \"No due date\");\r\n    }\r\n    return date.split(\"-\").reverse().join(\"-\");\r\n}\r\n\r\nfunction updateTitle(name) {\r\n    const title = document.querySelector('.project-title h1');\r\n    title.textContent = name;\r\n}\r\n\r\nfunction getDataProject() {\r\n    let selectedProjectTile = document.querySelector(\".selected\");\r\n    return selectedProjectTile.dataset.project;\r\n}\r\n\r\nfunction showAddTaskForm() {\r\n    const addTaskForm = document.querySelector(\"#addTaskForm\");\r\n    addTaskForm.classList.remove(\"hidden\");\r\n    const taskName = document.querySelector(\"#taskName\");\r\n    taskName.focus();\r\n}\r\n\r\nfunction hideAddTaskForm() {\r\n    const addTaskForm = document.querySelector(\"#addTaskForm\");\r\n    addTaskForm.classList.add(\"hidden\");\r\n    addTaskForm.reset();\r\n}\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/homeSection.js\n\r\n\r\n\r\nfunction checkHomeTile(tile) {\r\n    if(tile.id == 'today') {\r\n        showToday();\r\n    } else if(tile.id == 'thisWeek') {\r\n        showThisWeek();\r\n    } else {\r\n        showFavourites();\r\n    }\r\n}\r\n\r\nfunction showToday() {\r\n    hideAddTaskBtn();\r\n    hideAddTaskForm();\r\n    let currentDate = new Date().getDate().toString();\r\n    let currentMonth = (new Date().getMonth()+1).toString();\r\n    let currentYear = new Date().getFullYear().toString();\r\n    let todayDate = currentDate+ \"-\" + currentMonth+ \"-\" + currentYear;\r\n    let todayList = [];\r\n    projectList.forEach(project => {\r\n        let list = project.taskList.filter(task => {\r\n            return task.date == todayDate;\r\n        });\r\n        todayList = list.concat(todayList);\r\n    })\r\n    displayHomeTask(todayList);\r\n}\r\n\r\nfunction showThisWeek() {\r\n    hideAddTaskBtn();\r\n    hideAddTaskForm();\r\n    let thisWeekDate = (new Date().getTime()) + (7 * 24 * 60 * 60 * 1000);\r\n    let thisWeekList = [];\r\n    projectList.forEach(project => {\r\n        let list = project.taskList.filter(task => {\r\n            return dateToMs(task.date) <= thisWeekDate;\r\n        });\r\n        thisWeekList = list.concat(thisWeekList);\r\n    })\r\n    displayHomeTask(thisWeekList);\r\n}\r\n\r\nfunction dateToMs(date) {\r\n    let dateArr = date.split('-');\r\n    let temp = dateArr[0];\r\n    dateArr[0] = dateArr[1];\r\n    dateArr[1] = temp;\r\n    return new Date(dateArr.join(\"-\")).getTime();\r\n}\r\n\r\nfunction showFavourites() {\r\n    hideAddTaskBtn();\r\n    hideAddTaskForm();\r\n    let favList = [];\r\n    projectList.forEach(project => {\r\n        let list = project.taskList.filter(task => {\r\n            return task.favorite == true;\r\n        });\r\n        favList = list.concat(favList);\r\n    })\r\n    displayHomeTask(favList);\r\n}\r\n\r\nfunction displayHomeTask(homeList) {\r\n    const taskList = document.querySelector('#Tasks');\r\n    taskList.innerHTML = '';\r\n\r\n    homeList.forEach(task=> {\r\n        addTasktoUI(task.taskName, task.description, task.date, task.taskId,task.favorite,task.completed);\r\n    })\r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./src/dragAndDropProject.js\n\r\n\r\n\r\nlet dragStartIndex;\r\n\r\nfunction dragAndDropProjectListener() {\r\n    const dragBtns = document.querySelectorAll(\"#ProjectList .ham-btn\");\r\n    const draggableTiles = document.querySelectorAll(\"#ProjectList .tile\");\r\n\r\n    dragBtns.forEach((drag) => {\r\n        ['mousedown','dragstart'].forEach(evt => \r\n            drag.addEventListener(evt, dragStart)\r\n        );\r\n    });\r\n\r\n    draggableTiles.forEach((tile) => {\r\n        tile.addEventListener(\"dragover\", dragOver);\r\n        tile.addEventListener(\"drop\", dragDrop);\r\n        tile.addEventListener(\"dragenter\", dragEnter);\r\n        tile.addEventListener(\"dragleave\", dragLeave);\r\n    });\r\n}\r\n\r\nfunction dragStart(e) {\r\n    this.parentNode.draggable = true;\r\n    console.log(\"Event: \", \"dragstart\");\r\n    dragStartIndex = +this.closest('.tile').getAttribute('data-project');\r\n    console.log(\"dragStartIndex: \", dragStartIndex);\r\n}\r\n\r\nfunction dragEnter() {\r\n    console.log(\"Event: \", \"dragenter\");\r\n}\r\n\r\nfunction dragLeave() {\r\n    console.log(\"Event: \", \"dragleave\");\r\n}\r\n\r\nfunction dragOver(e) {\r\n    e.preventDefault();\r\n    console.log(\"Event: \", \"dragover\");\r\n    console.log('dragStartIndex', dragStartIndex);\r\n}\r\n\r\nfunction dragDrop() {\r\n    console.log(\"Event: \", \"drop\");\r\n    const dragEndIndex = +this.getAttribute('data-project');\r\n    console.log('dragEndIndex',dragEndIndex);\r\n    swapItems(dragStartIndex, dragEndIndex);\r\n}\r\n\r\nfunction swapItems(startIndex, endIndex) {\r\n    const startItem = document.querySelector(`[data-project=\"${startIndex}\"]`);\r\n    const endItem = document.querySelector(`[data-project=\"${endIndex}\"]`);\r\n    const projectContainer = document.querySelector('#ProjectList');\r\n    let nextStartIndex = startIndex-1;\r\n    if(nextStartIndex==endIndex) {\r\n        projectContainer.insertBefore(endItem,startItem);\r\n    } else {\r\n        const nextStartItem = document.querySelector(`[data-project=\"${nextStartIndex}\"]`);\r\n        projectContainer.insertBefore(startItem, endItem);\r\n        projectContainer.insertBefore(endItem, nextStartItem);\r\n    }\r\n\r\n    const temp = projectList[endIndex];\r\n    projectList[endIndex] = projectList[startIndex];\r\n    projectList[startIndex] = temp;\r\n\r\n    rearrangeDataProject();\r\n    storeInLocalStorage();\r\n}\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./src/deleteAndRenameProject.js\n\r\n\r\n\r\n\r\n\r\nfunction deleteAndRenameListener() {\r\n    const deleteBtns = document.querySelectorAll('.delete-project-btn');\r\n    deleteBtns.forEach(deleteBtn => {\r\n        deleteBtn.addEventListener('click', deleteProject);\r\n    });\r\n    const renameBtns = document.querySelectorAll('.rename-project-btn');\r\n    renameBtns.forEach(renameBtn => {\r\n        renameBtn.addEventListener('click', showRenameProjectForm);\r\n    });\r\n    const formRename = document.querySelector('#RenameForm');\r\n    formRename.addEventListener('submit', renameProject)\r\n    const formCancelBtn = document.querySelector('#RenameForm .project-cancel-btn');\r\n    formCancelBtn.addEventListener('click', () => {\r\n        setOriginalRenameFormPos();\r\n        hideRenameForm();\r\n        showRenamedProject();\r\n    })\r\n}\r\n\r\nfunction deleteProject(e) {\r\n    const dataProjectToBeDeleted = e.target.parentNode.parentNode.dataset.project;\r\n    projectList.splice(dataProjectToBeDeleted,1);\r\n    deleteProjectListContent(dataProjectToBeDeleted);\r\n    rearrangeDataProject();\r\n    storeInLocalStorage();\r\n}\r\n\r\nfunction rearrangeDataProject() {\r\n    let i=projectList.length-1;\r\n    const projectTiles = document.querySelectorAll('#ProjectList .tile');\r\n    \r\n    projectTiles.forEach((tile) => {\r\n        tile.dataset.project = i;\r\n        projectList[i].dataProject = i;\r\n        i--;\r\n    });\r\n    projectList.sort((a,b) => a.dataProject - b.dataProject);\r\n}\r\n\r\nfunction deleteProjectListContent(dataProjectValue) {\r\n    const container = document.querySelector(`[data-project=\"${dataProjectValue}\"]`);\r\n    const today = document.querySelector('#today');\r\n    container.remove();\r\n    today.classList.add('selected');\r\n    showToday();\r\n}\r\n\r\nfunction renameProject(e) {\r\n    e.preventDefault();\r\n    const projectName = document.querySelector('#ProjectList .tile.hidden p');\r\n    const newName = document.querySelector('#RenameForm .project-name-input');\r\n    projectName.textContent = newName.value;\r\n    const dataProject = projectName.parentNode.dataset.project;\r\n    projectList[dataProject].projectName = newName.value;\r\n    storeInLocalStorage();\r\n    setOriginalRenameFormPos();\r\n    hideRenameForm();\r\n    showRenamedProject();\r\n    updateTitle(newName.value);\r\n    dragAndDropProjectListener();\r\n}\r\n\r\nfunction showRenameProjectForm(e) {\r\n    const projectNode = e.target.parentNode.parentNode;\r\n    \r\n    if(!isRenameFormHidden()) {\r\n        setOriginalRenameFormPos();\r\n        showRenamedProject();\r\n    } \r\n    changeRenameFormPos(projectNode);\r\n    showRenameForm();\r\n}\r\n\r\nfunction isRenameFormHidden() {\r\n    const renameForm = document.querySelector('#RenameForm');\r\n    return renameForm.classList.contains('hidden');\r\n}\r\n\r\nfunction changeRenameFormPos(projectNode) {\r\n    const projectListNode = projectNode.parentNode;\r\n    projectNode.classList.add('hidden');\r\n    const renameForm = document.querySelector('#RenameForm');\r\n    const projectNameContainer = projectNode.querySelector('p');\r\n    renameForm.querySelector('input').value = projectNameContainer.textContent;\r\n    projectListNode.insertBefore(renameForm, projectNode);\r\n}\r\n\r\nfunction hideRenameForm() {\r\n    const renameForm = document.querySelector('#RenameForm');\r\n    renameForm.classList.add('hidden');\r\n}\r\n\r\nfunction showRenameForm() {\r\n    const renameForm = document.querySelector('#RenameForm');\r\n    renameForm.classList.remove('hidden');\r\n    renameForm.querySelector('input').focus();\r\n}\r\n\r\nfunction showRenamedProject() {\r\n    const hiddenProjectTile = document.querySelector('#ProjectList .tile.hidden')\r\n    hiddenProjectTile.classList.remove('hidden');\r\n}\r\n\r\nfunction setOriginalRenameFormPos() {\r\n    const renameForm = document.querySelector('#RenameForm');\r\n    const projectList = document.querySelector('#ProjectList');\r\n    projectList.appendChild(renameForm);\r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./src/editingTask.js\n\r\n\r\n\r\nfunction taskEdit() {\r\n    const taskLists = document.querySelector('#Tasks');\r\n    taskLists.addEventListener('click', processBtnActions);\r\n}\r\n\r\nfunction processBtnActions(e) {\r\n    const checkBox = e.target.closest(\"#taskTitle input[type='checkbox']\");\r\n    const favBtn = e.target.closest('#taskTitle .fav-btn');\r\n    const deleteBtn = e.target.closest('#taskTitle .delete-task-btn');\r\n    const renameBtn = e.target.closest('#taskTitle .rename-task-btn');\r\n    const descExpand = e.target.closest('.taskInfo .arrow-btn');\r\n    \r\n    \r\n    if(checkBox) {\r\n        checkCompleted(checkBox);\r\n    } else if(favBtn) {\r\n        checkFavourite(favBtn);\r\n    } else if(deleteBtn) {\r\n        checkDelete(deleteBtn);\r\n    } else if(renameBtn) {\r\n        checkRename(renameBtn);\r\n    } else if(descExpand) {\r\n        console.log('descExpand', descExpand);\r\n        checkDescExpand(descExpand);\r\n    }\r\n}\r\n\r\nfunction checkCompleted(checkBox) {\r\n    const taskInfo = checkBox.parentNode.parentNode.parentNode;\r\n    if(checkBox.checked) {\r\n        taskInfo.classList.add('strike-through', 'dim');\r\n    } else {\r\n        taskInfo.classList.remove('strike-through', 'dim');\r\n    }\r\n    const task = findTask(taskInfo.id);\r\n    task.completed = !task.completed;\r\n    storeInLocalStorage();\r\n}\r\n\r\nfunction checkFavourite(favBtn) {\r\n    const taskInfo = favBtn.parentNode.parentNode.parentNode;\r\n    const task = findTask(taskInfo.id);\r\n    if(task.favorite) {\r\n        favBtn.classList.remove('fa-solid');\r\n        favBtn.classList.add('fa-regular');\r\n    } else {\r\n        favBtn.classList.remove('fa-regular');\r\n        favBtn.classList.add('fa-solid');\r\n    }\r\n    task.favorite = !task.favorite;\r\n    storeInLocalStorage();\r\n}\r\n\r\nfunction findTask(id) {\r\n    let taskName=0;\r\n    projectList.forEach(project => {\r\n        project.taskList.forEach(task => {\r\n            if(task.taskId == id) {\r\n                taskName = task;\r\n            }\r\n        })\r\n    })\r\n    return taskName;\r\n}\r\n\r\nfunction checkDelete(deleteBtn) {\r\n    const taskInfo = deleteBtn.parentNode.parentNode.parentNode;\r\n    let details = getTaskDetails(taskInfo.id);\r\n    let projectName = details[0];\r\n    let taskName = details[1];\r\n    projectName.taskList = arrayRemove(projectName.taskList, taskName);\r\n    taskInfo.remove();\r\n    storeInLocalStorage();\r\n}\r\n\r\nfunction arrayRemove(arr, value) { \r\n    return arr.filter(function(ele){ \r\n        return ele != value; \r\n    });\r\n}\r\n\r\nfunction getTaskDetails(id) {\r\n    let projectName;\r\n    let taskName;\r\n    projectList.forEach(project => {\r\n        project.taskList.forEach(task => {\r\n            if(task.taskId == id) {\r\n                projectName = project\r\n                taskName = task;\r\n            }\r\n        })\r\n    })\r\n    return [projectName, taskName];\r\n}\r\n\r\nfunction checkRename(renameBtn) {\r\n    const taskInfo = renameBtn.parentNode.parentNode.parentNode;\r\n    \r\n    const taskForm = document.querySelector('#addTaskForm');\r\n    const renameForm = taskForm.cloneNode(true);\r\n    renameForm.id = 'renameTaskForm';\r\n    const addBtn = renameForm.querySelector('.task-add-btn');\r\n    addBtn.value = 'Save';\r\n\r\n    const taskName = taskInfo.querySelector('#taskTitle p');\r\n    const desc = taskInfo.querySelector('#description p');\r\n    const date = taskInfo.querySelector('#taskTitle .task-date');\r\n\r\n    const taskNameInput = renameForm.querySelector(\"input[type='text']\");\r\n    const descInput = renameForm.querySelector('textarea');\r\n    const dateInput = renameForm.querySelector(\"input[type='date']\")\r\n\r\n    taskNameInput.value = taskName.textContent;\r\n    descInput.value = desc.textContent;\r\n    dateInput.value = processDate(date.textContent);\r\n\r\n    renameForm.classList.remove('hidden');\r\n    const tasks = taskInfo.parentNode;\r\n    tasks.insertBefore(renameForm, taskInfo);\r\n    taskInfo.classList.add('hidden');\r\n    taskRenameFormBtnListener(renameForm,taskInfo);\r\n}\r\n\r\nfunction taskRenameFormBtnListener(renameForm, taskInfo) {\r\n    renameForm.addEventListener('submit', processTaskRename);\r\n    const cancelBtn = renameForm.querySelector('.task-cancel-btn');\r\n    cancelBtn.addEventListener('click', e => {\r\n        hideRenameTaskForm();\r\n        taskInfo.classList.remove('hidden');\r\n    });\r\n}\r\n\r\nfunction processTaskRename(e) {\r\n    e.preventDefault();\r\n    const selectedTask = findHiddenTask();\r\n    \r\n    const taskName = selectedTask.querySelector('#taskTitle p');\r\n    const desc = selectedTask.querySelector('#description p');\r\n    const date = selectedTask.querySelector('#taskTitle .task-date');\r\n\r\n    const taskNameInput = e.target.querySelector(\"input[type='text']\");\r\n    const descInput = e.target.querySelector('textarea');\r\n    const dateInput = e.target.querySelector(\"input[type='date']\");\r\n\r\n    taskName.textContent = taskNameInput.value;\r\n    desc.textContent = descInput.value;\r\n    date.textContent = processDate(dateInput.value);\r\n\r\n    const task = findTask(selectedTask.id);\r\n    task.taskName = taskName.textContent;\r\n    task.description = desc.textContent;\r\n    task.date = date.textContent;\r\n    storeInLocalStorage();\r\n\r\n    selectedTask.classList.remove('hidden');\r\n    hideRenameTaskForm();\r\n}\r\n\r\nfunction checkDescExpand(descExpand) {\r\n    console.log(\"sibling\",descExpand.previousSibling);\r\n    const desc = descExpand.previousSibling;\r\n    const arrow = descExpand.firstChild;\r\n    console.log('transform', arrow.computedStyleMap().get('transform')[0].angle.value);\r\n    if(arrow.computedStyleMap().get('transform')[0].angle.value == 45) {\r\n        arrow.style.transform = 'rotate(-135deg)'\r\n    } else {\r\n        arrow.style.transform = 'rotate(45deg)'\r\n    }\r\n    if(desc.textContent) {\r\n        desc.classList.toggle('expanded-desc');\r\n    }\r\n    // if(desc.textContent) {\r\n    //     if(desc.classList.contains('expanded-desc')) {\r\n    //         desc.classList.remove('expanded-desc');\r\n    //         arrow.style.transform = 'rotate(45deg)'\r\n    //     } else {\r\n    //         desc.classList.add('expanded-desc');\r\n    //         arrow.style.transform = 'rotate(-135deg)'\r\n    //     }\r\n    // }\r\n}\r\n\r\nfunction findHiddenTask() {\r\n    return document.querySelector('#Tasks .taskInfo.hidden');\r\n}\r\n\r\nfunction hideRenameTaskForm() {\r\n    const addTaskForm = document.querySelector(\"#renameTaskForm\");\r\n    addTaskForm.remove();\r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./src/creatingProject.js\n\r\n\r\n\r\n\r\n\r\n\r\nconst PROJECTLISTKEY = \"projectListKey\";\r\nconst TASKLISTID = 'taskListId';\r\n\r\nfunction addNewProject() {\r\n    const newProjectButton = document.querySelector('.add-project-wrapper');\r\n    newProjectButton.addEventListener('click', showAddProject);\r\n\r\n    const projectCancelBtn = document.querySelector('.project-cancel-btn');\r\n    projectCancelBtn.addEventListener('click', hideAddProject);\r\n\r\n    const addProjectForm = document.querySelector('#AddProjectForm');\r\n    addProjectForm.addEventListener('submit', addProjectName);\r\n\r\n    const menu = document.querySelector('#Menu');\r\n    menu.addEventListener('click', menuTilesListener);\r\n\r\n    displayProjectList();\r\n}\r\n\r\nlet defaultProjectList=[];\r\nlet projectList = localStorage.getItem(PROJECTLISTKEY);\r\nprojectList = JSON.parse(projectList || JSON.stringify(defaultProjectList));\r\n\r\nfunction menuTilesListener(e) {\r\n    let homeTile = e.target.closest(\".home .tile\");\r\n    let projectTile = e.target.closest(\"#ProjectList .tile\");\r\n\r\n    if(homeTile!=null) {\r\n        const title = homeTile.querySelector('p').textContent;\r\n        selectTile(homeTile);\r\n        updateTitle(title);\r\n        checkHomeTile(homeTile);\r\n        taskEdit();\r\n    } else if(projectTile!=null) {\r\n        const dataProject = projectTile.dataset.project;\r\n        const title = projectTile.querySelector('p').textContent;\r\n        selectTile(projectTile);\r\n        displayTask(dataProject);\r\n        showAddTaskBtn();\r\n        updateTitle(title);\r\n        taskEdit();\r\n    }\r\n}\r\n\r\nfunction showAddTaskBtn() {\r\n    const addTaskBtn = document.querySelector('.add-task-wrapper')\r\n    addTaskBtn.classList.remove('hidden');\r\n}\r\n\r\nfunction hideAddTaskBtn() {\r\n    const addTaskBtn = document.querySelector('.add-task-wrapper')\r\n    addTaskBtn.classList.add('hidden');\r\n}\r\n\r\nfunction selectTile(tileName) {\r\n    const selectedTile = document.querySelector('.selected');\r\n    if(selectedTile) {\r\n        selectedTile.classList.remove('selected');\r\n    }\r\n    tileName.classList.add('selected');\r\n}\r\n\r\nfunction addProjectName(e) {\r\n    e.preventDefault();\r\n    const projectName = document.querySelector('.project-name-input').value;\r\n    let dataProject = creatingProject_getDataProject();\r\n    const newProject = createProject(dataProject, projectName);\r\n    projectList.push(newProject);\r\n    storeInLocalStorage();\r\n    addToProjectListsUI(dataProject, projectName);\r\n    hideAddProject();\r\n    deleteAndRenameListener();\r\n    dragAndDropProjectListener();\r\n}\r\n\r\nfunction createProject(dataProject, projectName) {\r\n    let taskList = [];\r\n    const taskNum = taskList.length;\r\n    return { dataProject, projectName, taskList, taskNum };\r\n}\r\n\r\nfunction creatingProject_getDataProject() {\r\n    const projects = document.querySelectorAll('[data-project]');\r\n    return projects.length;\r\n}\r\n\r\nfunction addToProjectListsUI(dataProject, projectName) {\r\n    \r\n    //hamburger button Container\r\n    const hamBtn = createNewElement('div', ['ham-btn']);\r\n\r\n    // hamburger button\r\n    const bar = createNewElement('div', ['bar']);\r\n    hamBtn.appendChild(bar);\r\n\r\n    const projectNameContainer = document.createElement('p');\r\n    projectNameContainer.textContent = projectName;\r\n\r\n    const deleteAndRenameContainer = createNewElement('div', ['delete-and-rename']);\r\n    const deleteBtn = createNewElement('i', ['fa-solid', 'fa-trash-can', 'delete-project-btn']);\r\n    const renameBtn = createNewElement('i', ['fa-regular', 'fa-pen-to-square', 'rename-project-btn']);\r\n    deleteAndRenameContainer.appendChild(deleteBtn);\r\n    deleteAndRenameContainer.appendChild(renameBtn);\r\n\r\n    const container = createNewElement('div', ['tile'], 'data-project', dataProject);\r\n    container.prepend(hamBtn);\r\n    container.appendChild(projectNameContainer);\r\n    container.appendChild(deleteAndRenameContainer);\r\n    \r\n    const projectWrapper = document.querySelector('#ProjectList');\r\n    projectWrapper.prepend(container);\r\n}\r\n\r\nfunction createNewElement(tag, nameOFClass, attr='', attrValue) {\r\n    const container = document.createElement(tag);\r\n    nameOFClass.forEach(className => {\r\n        container.classList.add(className);\r\n    });\r\n    if(attr!='') {\r\n        container.setAttribute(attr, `${attrValue}`);\r\n    }\r\n    return container;\r\n}\r\n\r\nfunction storeInLocalStorage() {\r\n    localStorage.setItem(PROJECTLISTKEY, JSON.stringify(projectList));\r\n    localStorage.setItem(TASKLISTID, JSON.stringify(id));\r\n}\r\n\r\nfunction displayProjectList() {\r\n    document.querySelector('#ProjectList').innerHTML = '';\r\n    projectList.forEach(project => {\r\n        addToProjectListsUI(project.dataProject,project.projectName);\r\n    });\r\n}\r\n\r\nfunction hideAddProject() {\r\n    const newProject = document.querySelector('#AddProjectForm');\r\n    const projectNameInputField = document.querySelector('.project-name-input');\r\n    projectNameInputField.value = '';\r\n    newProject.classList.add('hidden');\r\n}\r\n\r\nfunction showAddProject() {\r\n    const newProject = document.querySelector('#AddProjectForm');\r\n    newProject.classList.remove('hidden');\r\n    document.querySelector('.project-name-input').focus();\r\n}\r\n\r\n\n;// CONCATENATED MODULE: ./src/index.js\n\r\n\r\n\r\n\r\n\r\n\r\n\r\naddNewProject();\r\ndeleteAndRenameListener();\r\ncreatingTask();\r\ntaskEdit();\r\nshowToday();\r\ndragAndDropProjectListener();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///974\n")}},__webpack_exports__={};__webpack_modules__[974]()})();